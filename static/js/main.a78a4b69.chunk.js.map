{"version":3,"sources":["constants/apiConstants.js","components/Item.jsx","components/SearchBox.jsx","components/Products.jsx","constants/actionTypes.js","actions/productActions.js","actions/index.js","containers/ProductsContainer.jsx","components/Filters.jsx","actions/filterActions.js","containers/FiltersContainer.jsx","components/Home.jsx","components/App.js","reducers/inventoryReducer.js","reducers/filtersReducer.js","reducers/rootReducer.js","store/index.js","provider/index.js","index.js"],"names":["API_BASE_URL","ItemComponent","props","this","classes","item","Grid","xs","className","grid","Card","card","CardMedia","media","image","title","name","CardContent","Typography","gutterBottom","align","brand","model","component","Intl","NumberFormat","style","currency","maximumSignificantDigits","format","price","id","Component","withStyles","theme","maxWidth","height","paddingTop","button","marginTop","marginBottom","marginRight","marginLeft","SearchBoxComponent","updateSearchTerm","e","searchTerm","target","value","toLowerCase","filteredProductsList","products","filter","includes","updateFilteredProducts","setState","state","root","TextField","label","range","margin","variant","onChange","disabled","isFilterActive","flexGrow","ProductsComponent","page","prevY","filteredProducts","length","fetchProducts","observer","IntersectionObserver","handleObserver","bind","rootMargin","threshold","observe","loadingRef","prevProps","prevState","entities","y","boundingClientRect","curPage","Math","floor","Container","SearchBox","container","map","Item","ref","FETCH_PRODUCTS","UPDATE_FILTERED_PRODUCTS","SET_FILTER_DETAILS","data","dispatch","type","actionTypes","payload","actions","withRouter","connect","inventoryReducer","filtersReducer","isActive","currentPage","a","fetch","headers","response","json","console","log","Products","FiltersComponent","addFilter","minRange","maxRange","applyFilters","filteredItems","filterProductsByPriceRange","filterProductsByBrand","updateFilterDetails","filters","clearFilters","brandsList","brands","forEach","push","color","InputLabel","Select","labelId","selectEmpty","index","MenuItem","Button","onClick","width","spacing","minWidth","Filters","HomeComponent","App","AppBar","position","Toolbar","path","exact","Home","initialState","combineReducers","action","concat","middlewares","thunkMiddleware","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","rootReducer","persistedStore","createStore","applyMiddleware","persistor","persistStore","Provider","children","isServer","store","loading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a78a4b69.chunk.js","sourcesContent":["\n\nexport const API_BASE_URL = \"http://localhost:3001\";","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { API_BASE_URL } from '../constants/apiConstants';\n\nconst styles = theme => ({\n    card: {\n        maxWidth: 300,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    button: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: 'auto',\n        marginLeft: 'auto'\n    },\n    grid: {\n        marginTop: 20,\n        marginLeft: 30\n    }\n});\n\n\nclass ItemComponent extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, item } = this.props;\n\n        return (\n            <Grid item xs={3} className={classes.grid}>\n                <Card className={classes.card} key={item.id}>\n                    <CardMedia\n                        className = {classes.media}\n                        image     = {`${API_BASE_URL}/images/${item.image}`}\n                        title     = {item.name}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom align =\"center\">\n                            {item.brand + \" \" + item.model} \n                        </Typography>\n                        <Typography component=\"p\" align =\"center\">\n                            Price : {new Intl.NumberFormat('en-IN', {\n                                            style: 'currency',\n                                            currency: 'INR',\n                                            maximumSignificantDigits: 3}).format(item.price)}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n        )\n    }\n    \n}\n\nexport default withStyles(styles)(ItemComponent)","import React, {Component} from 'react';\nimport { withStyles,Grid,TextField } from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    }\n});\n\nclass SearchBoxComponent extends Component {\n\n    constructor(props){\n        super(props);\n        this.props = props;\n\n        this.state = {\n            searchTerm           : \"\"\n        };\n    }\n\n    updateSearchTerm = (e) => {\n\n        const searchTerm = e.target.value ? e.target.value.toLowerCase() : \"\";\n\n        const {products} = this.props;\n\n        let filteredProductsList = products.filter((item) => {\n            return item && (item.brand && item.brand.toLowerCase().includes(searchTerm) == true || item.model && item.model.toLowerCase().includes(searchTerm) === true);\n        });\n\n        this.props.updateFilteredProducts(filteredProductsList);\n        this.setState({searchTerm : searchTerm});\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <TextField\n                    id      = \"outlined-search\"\n                    label   = \"Search - Brand/Model\"\n                    className ={classes.range}\n                    value   = {this.state.searchTerm}\n                    name    = \"searchBox\"\n                    margin  = \"normal\"\n                    variant = \"outlined\"\n                    onChange={(e) => this.updateSearchTerm(e)}\n                    disabled={this.props.isFilterActive}\n                />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(SearchBoxComponent)","import React, { Component } from 'react';\nimport { withStyles,Grid,TextField,Container } from '@material-ui/core';\nimport Item      from './Item';\nimport SearchBox from './SearchBox';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1\n    }\n});\n\nclass ProductsComponent extends Component {\n\n    constructor(props){\n        super(props);\n        this.props = props;\n\n        this.state = {\n            filteredProductsList : [],\n            page : 1,\n            prevY : 0\n        };\n    }\n\n    componentDidMount() {\n\n        const { filteredProducts } = this.props;\n\n        if(filteredProducts && filteredProducts.length > 0){\n            this.setState({\n                filteredProductsList : filteredProducts\n            });\n        }\n        else {\n            this.props.fetchProducts(this.state.page);\n        }\n\n        // Options\n        var options = {\n            root: null, // Page as root\n            rootMargin: '0px',\n            threshold: 1.0\n        };\n\n        // Create an observer\n        this.observer = new IntersectionObserver(\n            this.handleObserver.bind(this), //callback\n            options\n        );\n        \n        //Observ the `loadingRef`\n        this.observer.observe(this.loadingRef);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.filteredProducts !== this.props.filteredProducts) {\n            if(this.props.filteredProducts){\n                this.setState({\n                    filteredProductsList : this.props.filteredProducts\n                });\n            }\n        }\n    }\n\n    handleObserver(entities, observer) {\n        const y = entities[0].boundingClientRect.y;\n\n        if (this.state.prevY > y && this.props.products.length == this.state.filteredProductsList.length && this.props.isFilterActive == false) {\n            // scroll only when there is no search filter\n            const curPage = Math.floor(this.state.filteredProductsList.length/5) + 1;\n            this.props.fetchProducts(curPage);\n            this.setState({ page: curPage });\n        }\n        this.setState({ prevY: y });\n    }\n    \n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <Container>\n                    <SearchBox \n                        filteredProducts       = {this.props.filteredProducts}\n                        products               = {this.props.products}\n                        updateFilteredProducts = {this.props.updateFilteredProducts}\n                        isFilterActive         = {this.props.isFilterActive}\n                    />\n                </Container>\n                <Grid container> \n                    {this.state.filteredProductsList.map(item => (\n                        <Item item={item} key={item.id}/>\n                    ))}\n                </Grid>\n                <div\n                    ref={loadingRef => (this.loadingRef = loadingRef)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(ProductsComponent)","\nexport const FETCH_PRODUCTS \t\t\t= \"FETCH_PRODUCTS\";\nexport const UPDATE_FILTERED_PRODUCTS   = \"UPDATE_FILTERED_PRODUCTS\";\nexport const SET_FILTER_DETAILS \t\t= \"SET_FILTER_DETAILS\";","import * as actions from './index';\nimport { API_BASE_URL } from '../constants/apiConstants';\n\nexport const fetchProducts = (currentPage) => async (dispatch) => {\n\n    try{\n        let response = await fetch(`${API_BASE_URL}/fetch?currentPage=${currentPage}&pageSize=6`,{\n          headers : { \n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n           }\n        });\n        response = await response.json();\n\n        if(response.data.length > 0){\n            dispatch(actions.fetchProducts(response.data));\n        }\n    }\n    catch(ex){\n        console.log(ex);\n    }\n};\n\nexport const updateFilteredProducts = (data) => (dispatch) => {\n    dispatch(actions.updateFilteredProducts(data));\n};","import * as actionTypes from '../constants/actionTypes';\n\nexport const fetchProducts = (data) => {\n    \n    return { \n    \ttype    : actionTypes.FETCH_PRODUCTS, \n    \tpayload : data \n    };\n}\n\nexport const updateFilteredProducts = (data) => {\n    \n    return { \n    \ttype    : actionTypes.UPDATE_FILTERED_PRODUCTS, \n    \tpayload : data \n    };\n}\n\nexport const updateFilterDetails = (data) => {\n    \n    return { \n    \ttype    : actionTypes.SET_FILTER_DETAILS, \n    \tpayload : data \n    };\n}","import { connect }          from 'react-redux';\nimport { withRouter }       from 'react-router-dom';\nimport Products             from '../components/Products';\n\nimport { \n    fetchProducts,\n    updateFilteredProducts\n}                           from \"../actions/productActions\";\n\n\nconst ProductsContainer = props => {\n    return <Products {...props} />\n};\n\nconst mapStateToProps = state => {\n    const { inventoryReducer,filtersReducer } = state;\n\n    return {\n        filteredProducts : inventoryReducer.filteredProducts,\n        products         : inventoryReducer.products,\n        isFilterActive   : filtersReducer.isActive\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n    fetchProducts(currentPage) {\n        dispatch(fetchProducts(currentPage));\n    },\n    updateFilteredProducts(data) {\n        dispatch(updateFilteredProducts(data));\n    }\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProductsContainer));","import React,{Component} from 'react';\nimport { withStyles,Select,MenuItem,TextField,Typography,Button,InputLabel} from '@material-ui/core';\n\nconst styles = theme => ({\n    range: {\n    width: '50%'\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  }\n});\n\nclass FiltersComponent extends Component {\n\n    constructor(props){\n        super(props);\n        this.props = props;\n\n        this.state = {\n            minRange : \"\",\n            maxRange : \"\",\n            brand    : \"\",\n            brandsList : [],\n            filters  : false\n        }\n    }\n\n    componentDidMount(){\n        let brands = [];\n\n        this.props.products && this.props.products.forEach(item => {\n            if(brands.includes(item.brand) == false){\n                brands.push(item.brand);\n            }\n        });\n\n        if(this.props.filtersReducer){\n            this.setState({\n                minRange : this.props.filtersReducer.minRange,\n                maxRange : this.props.filtersReducer.maxRange,\n                brand    : this.props.filtersReducer.brand,\n                filters  : this.props.filtersReducer.isActive,\n            })\n        }\n\n        this.setState({brandsList : brands});\n    }\n\n    componentDidUpdate(prevProps, prevState){\n\n        if (prevProps.products !== this.props.products) {\n            let brands = [];\n\n            this.props.products.forEach(item => {\n                if(brands.includes(item.brand) == false){\n                    brands.push(item.brand);\n                }\n            });\n\n            this.setState({brandsList : brands});\n        }\n    }\n\n    addFilter = (e) => {\n\n        if(e.name == \"rangeMin\"){\n            this.setState({minRange : e.value});\n        }\n        else if(e.name == \"rangeMax\"){\n            this.setState({maxRange : e.value});\n        }\n        else if(e.name == \"brand\"){\n            this.setState({brand : e.value});\n        }\n    }\n\n    applyFilters = () => {\n\n        let filteredItems = this.props.products;\n\n        if((this.state.minRange && this.state.maxRange) || this.state.brand){\n            // any of the filter is applied\n\n            if(this.state.minRange && this.state.maxRange){\n                filteredItems = this.filterProductsByPriceRange(filteredItems);\n            }\n            if(this.state.brand){\n                filteredItems = this.filterProductsByBrand(filteredItems);\n            }\n\n            this.props.updateFilteredProducts(filteredItems);\n            this.props.updateFilterDetails({\n                isActive : true,\n                brand    : this.state.brand,\n                minRange : this.state.minRange,\n                maxRange : this.state.maxRange\n            });\n            this.setState({filters : true});\n        }\n    }\n\n    clearFilters = () => {\n        \n        this.setState({minRange : \"\", maxRange : \"\", brand : \"\"});\n\n        this.props.updateFilteredProducts(this.props.products);\n        this.props.updateFilterDetails({\n            isActive : false,\n            brand    : \"\",\n            minRange : \"\",\n            maxRange : \"\"\n        });\n        this.setState({filters : false});\n    }\n\n    filterProductsByPriceRange = (products) => {\n\n        products = products.filter((item) => {\n            return item.price > this.state.minRange && item.price < this.state.maxRange\n        });\n\n        return products;\n    }\n\n    filterProductsByBrand = (products) => {\n\n        products = products.filter((item) => {\n            return item.brand.includes(this.state.brand);\n        });\n\n        return products;\n    }\n\n    render(){\n        return (\n            <>\n            <br/>\n            <Typography component=\"h3\" variant=\"subtitle2\" color=\"inherit\">\n              Price Range\n            </Typography>\n            <TextField\n                id      = \"outlined-name\"\n                label   = \"Min\"\n                // className={classes.range}\n                value   = {this.state.minRange}\n                name    = \"rangeMin\"\n                margin  = \"normal\"\n                variant = \"outlined\"\n                onChange={e => this.addFilter(e.target)}\n                disabled = { this.state.filters}\n            />\n            <TextField\n              id      =\"outlined-name\"\n              label   =\"Max\"\n              name    =\"rangeMax\"\n              // className={classes.range}\n              value   = {this.state.maxRange}\n              onChange={e => this.addFilter(e.target)}\n              margin  =\"normal\"\n              variant =\"outlined\"\n              disabled = { this.state.filters}\n            />\n            <br/>\n            <br/>\n            <InputLabel id=\"brandLabel\">Brand</InputLabel>\n            <Select\n                labelId=\"brandLabel\"\n                id=\"brand\"\n                value={this.state.brand}\n                name=\"brand\"\n                onChange={e => this.addFilter(e.target)}\n                className={this.props.classes.selectEmpty}\n                disabled = { this.state.filters}\n            >\n                {\n                    this.state.brandsList.map((item,index) => {\n                        return(\n                            <MenuItem value={item} key={index}>{item}</MenuItem>\n                        )\n                    })\n                }\n            </Select>\n            <br/>\n            <br/>\n            <br/>\n\n            {\n                this.state.filters == false ? \n                <Button variant=\"contained\" color=\"primary\" onClick={this.applyFilters}>\n                    Apply Filters\n                </Button>\n                : \n                <Button variant=\"contained\" color=\"primary\" onClick={this.clearFilters}>\n                    Clear Filters\n                </Button>\n            }\n            </>\n        )\n    }\n}\n\nexport default withStyles(styles)(FiltersComponent)","import * as actions from './index';\n\n\nexport const updateFilterDetails = (data) => (dispatch) => {\n    dispatch(actions.updateFilterDetails(data));\n};","import { connect }          from 'react-redux';\nimport { withRouter }       from 'react-router-dom';\nimport Filters              from '../components/Filters';\n\nimport { \n    updateFilteredProducts\n}                           from \"../actions/productActions\";\n\nimport {\n    updateFilterDetails\n}                           from \"../actions/filterActions\";\n\n\nconst FiltersContainer = props => {\n    return <Filters {...props} />\n};\n\nconst mapStateToProps = state => {\n    const { inventoryReducer,filtersReducer } = state;\n\n    return {\n        filteredProducts : inventoryReducer.filteredProducts,\n        products         : inventoryReducer.products,\n        filtersReducer   : filtersReducer\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n    updateFilteredProducts(data) {\n        dispatch(updateFilteredProducts(data));\n    },\n    updateFilterDetails(data) {\n        dispatch(updateFilterDetails(data));\n    }\n\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(FiltersContainer));","import React, {Component} from 'react';\nimport Grid               from '@material-ui/core/Grid';\nimport ProductsContainer  from '../containers/ProductsContainer';\nimport FiltersContainer   from '../containers/FiltersContainer';\n\nclass HomeComponent extends Component {\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={9}>\n                        <ProductsContainer />\n                    </Grid>\n\n                    <Grid item xs={3}>\n                        <FiltersContainer />\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default HomeComponent","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Home from '../components/Home';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    }\n};\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n\n        const { classes } = this.props;\n\n        return (\n            <BrowserRouter>\n                <div className={classes.root}>\n                    <AppBar position=\"static\" color=\"primary\">\n                        <Toolbar>\n                            <Typography className=\"title\" color=\"inherit\">\n                                Cars24\n                            </Typography>\n                        </Toolbar>\n                    </AppBar>\n                    <Route path=\"/\" exact>\n                        <Home />\n                    </Route>\n                    <Route>\n                      <Home />\n                    </Route>\n                </div>\n          </BrowserRouter>\n        );\n    }\n}\n\nexport default withStyles(styles)(App);","import * as actionTypes from '../constants/actionTypes';\n\nconst initialState = {\n    products         : [],\n    filteredProducts : []\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    \n    case actionTypes.FETCH_PRODUCTS:\n        \n        return { \n            ...state, \n            products         : state.products.concat(action.payload),\n            filteredProducts : state.filteredProducts.concat(action.payload)\n        };\n\n    case actionTypes.UPDATE_FILTERED_PRODUCTS:\n        \n        return { \n            ...state,\n            filteredProducts : action.payload\n        };\n\n    default:\n        return state;\n  }\n}","import * as actionTypes from '../constants/actionTypes';\n\nconst initialState = {\n    'isActive' : false,\n    'brand'    : '',\n    'minRange' : '',\n    'maxRange' : ''\n\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    \n    case actionTypes.SET_FILTER_DETAILS:\n        \n        return { \n            ...state, \n            isActive         : action.payload.isActive,\n            brand            : action.payload.brand,\n            minRange         : action.payload.minRange,\n            maxRange         : action.payload.maxRange\n        };\n\n    default:\n        return state;\n  }\n}","import { combineReducers } from 'redux';\n\nimport inventoryReducer from './inventoryReducer';\nimport filtersReducer   from './filtersReducer';\n\nexport default combineReducers({\n\tinventoryReducer,\n\tfiltersReducer\n});","import {createStore, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers/rootReducer';\nimport { persistStore,persistReducer } from 'redux-persist';\nimport { createLogger } from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nconst middlewares = [];\n\nif(process.env.NODE_ENV === 'development') {\n  \n  const logger = createLogger({\n    collapsed: true,\n    duration: true\n  });\n  middlewares.push(logger);\n}\n\nmiddlewares.push(thunkMiddleware);\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['inventoryReducer','filtersReducer']\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst persistedStore = createStore(\n  persistedReducer,\n  applyMiddleware(...middlewares)\n);\n\nconst persistor = persistStore(persistedStore);\n\nexport { persistedStore, persistor };","import React from 'react';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistedStore, persistor } from '../store';\n\nconst Provider = ({ children, isServer }) => (\n  <ReduxProvider store={persistedStore}>\n    <PersistGate loading={isServer ? children : null} persistor={persistor}>\n      {children}\n    </PersistGate>\n  </ReduxProvider>\n);\n\nexport default Provider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Provider from './provider';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}